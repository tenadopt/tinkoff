function devs () {
    // accumulator for enter data type string
    let userInput = ''
    process.stdin.on('data', (data) => {
        userInput += data.toString()
    })
    process.stdin.on('end', () => {
        let newArr = []
        const lines = userInput.split("\n")
        let dn = Number(lines[0])
        for (let i = 1; i <= dn*2; i += 2) {
            let aStr = strToNumArr(lines[i + 1])
            newArr.push(aStr)
        }
        return newArr.forEach((dataSet)=>checkFreeCon(dataSet))
    })
}

function strToNumArr(str) {
    return  str.split('').map(el=>Number(el))
}

function checkFreeCon(arr) {
    //exit when we can't connect to dev
    const sortArr = arr.sort()
    let firstNC = sortArr[0]
    let conFor = sortArr[1]
    //
    // if (firstNC>1) {
    //     console.log(firstNC)
    //     return console.log("Yes")
    // } else if (conFor == 0) {
    //     return console.log("Yes")
    // } else if (firstNC === 0 && conFor === 0) {
    //     return console.log("No")
    // }
    getNextCon(sortArr, firstNC)
    return console.log("Yes")
}



function getNextCon(arr, conFor) {
    arr[0] = 10

}

devs()



// Тинькофф начал разрабатывать новый проект. Для этого было подобрано ﻿
// �
// n﻿ разработчиков. У ﻿
// �
// i﻿-го разработчика есть порог социальности ﻿
// �
// �
// a
// i
// ​
// ﻿, это значит, что он готов контактировать напрямую с не более чем ﻿
// �
// �
// a
// i
// ​
// ﻿ другими разработчиками.
//
//     Определите, можно ли наладить контакт между какими-то парами разработчиков, так чтобы любые два контактировали либо напрямую, либо через других разработчиков.
//
//     Формат входных данных
//
// Каждый тест состоит из нескольких наборов входных данных.
//
//     В первой строке находится одно целое число ﻿
// �
// t﻿ ﻿
// (
//     1
// ≤
// �
// ≤
// 1000
// )
// (1≤t≤1000)﻿ — количество наборов входных данных. Далее следует описание наборов входных данных.
//
//     Первая строка каждого набора входных данных содержит одно число ﻿
// �
// n﻿ ﻿
// (
//     1
// ≤
// �
// ≤
// 1
// 0
// 5
// )
// (1≤n≤10
// 5
// )﻿ — количество разработчиков. Вторая строка содержит ﻿
// �
// n﻿ натуральных чисел ﻿
// �
// �
// a
// i
// ​
// ﻿ ﻿
// (
//     1
// ≤
// �
// �
// ≤
// 1
// 0
// 9
// )
// (1≤a
// i
// ​
// ≤10
// 9
// )﻿ — пороги социальностей разработчиков. Гарантируется, что сумма значений ﻿
// �
// n﻿ по всем наборам входных данных не превосходит ﻿
// 1
// 0
// 5
// 10
// 5
//  ﻿.
//
// Формат выходных данных
//
// Для каждого набора входных данных, выведите «﻿
// �
// �
// �
// Yes﻿», если можно наладить контакт между программистами, и «﻿
// �
// �
// No﻿» иначе. Вы можете выводить каждую букву в любом регистре (строчную или заглавную). Например, строки «﻿
// �
// �
// �
// yEs﻿», «﻿
// �
// �
// �
// yes﻿», «﻿
// �
// �
// �
// Yes﻿» и «﻿
// �
// �
// �
// YES﻿» будут приняты как положительный ответ.
//
//     Примеры данных
// 4
// 1
// 1000000000
// 2
// 1 1
// 3
// 1 1 1
// 4
// 1 1 2 2
// 4
// 1
// 1000000000
// 2
// 1 1
// 3
// 1 1 1
// 4
// 1 1 2 2
// Yes
// Yes
// No
// Yes