// function result() {
//     // accumulator for enter data type string
//     let userInput = ''
//     process.stdin.on('data', (data) => {
//         userInput += data.toString()
//     })
//     process.stdin.on('end', () => {
//         const arr = userInput.split("\n")
//         const answer = checkData(arr)
//         console.log(answer)
//     })
// }
//
// function sortString (str) {
//     return str.split('').sort().join('')
// }
//
// function checkString(str) {
//     return sortString("TINKOFF") === sortString(str) ? "Yes" : "No"
// }
//
// function checkData (arr) {
//     let res = []
//     for (i=1;i<=arr[0];i++) {
//         res.push(checkString(arr[i]))
//     }
//     return res
// }
//
// result()
//
//
// // Для вывески нового офиса Тинькофф были заказаны неоновые буквы.
// //
// //     В офис привезли какой-то набор из больших латинских букв. Проверьте, что из них действительно можно составить строку «﻿
// //
// // TINKOFF﻿» для вывески. Тинькофф не хочет платить за лишние буквы, поэтому должны быть использованы все привезённые буквы.
// //
// //     Формат входных данных
// //
// // Каждый тест состоит из нескольких наборов входных данных. В первой строке находится одно целое число ﻿
//
// // (1≤t≤100)﻿ — количество наборов входных данных. Далее следует описание наборов входных данных. Единственная строка каждого набора входных данных содержит одну непустую строку из больших латинских букв длиной не более 20 символов — привезённый набор букв.
// //
// //     Формат выходных данных
// //
// // Для каждого набора входных данных, в отдельной строке, выведите «﻿
// // Yes﻿» (без кавычек), если из всех привезённых букв можно составить строку «﻿
// // �
// // �
// // �
// // �
// // �
// // �
// // �
// // TINKOFF﻿», и «﻿
// // �
// // �
// // No﻿» иначе. Вы можете выводить каждую букву в любом регистре (строчную или заглавную). Например, строки «﻿
// // �
// // �
// // �
// // yEs﻿», «﻿
// // �
// // �
// // �
// // yes﻿», «﻿
// // �
// // �
// // �
// // Yes﻿» и «﻿
// // �
// // �
// // �
// // YES﻿» будут приняты как положительный ответ.
// //
// //     Примеры данных
// // 4
// // TINKOFF
// // TINKOFFF
// // AAAA
// // FFOKNIT
// // 4
// // TINKOFF
// // TINKOFFF
// // AAAA
// // FFOKNIT
// // Yes
// // No
// // No
// // Yes
